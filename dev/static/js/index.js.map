{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/views/index/index.js","src/views/index/module/fezdesc/index.js","src/views/index/module/fezdesc/service.js","src/views/index/module/jumbotron/index.js","src/views/index/module/jumbotron/service.js","src/views/public/demo-data.js","src/views/public/module/common/common.js","src/views/public/module/common/footer.js","src/views/public/module/common/header.js","../node_modules/babel-runtime/core-js/get-iterator.js","../node_modules/babel-runtime/core-js/object/assign.js","../node_modules/babel-runtime/helpers/extends.js","../node_modules/core-js/library/fn/get-iterator.js","../node_modules/core-js/library/fn/object/assign.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_add-to-unscopables.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_array-includes.js","../node_modules/core-js/library/modules/_classof.js","../node_modules/core-js/library/modules/_cof.js","../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_defined.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_enum-bug-keys.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_html.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_iobject.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_iter-create.js","../node_modules/core-js/library/modules/_iter-define.js","../node_modules/core-js/library/modules/_iter-step.js","../node_modules/core-js/library/modules/_iterators.js","../node_modules/core-js/library/modules/_library.js","../node_modules/core-js/library/modules/_object-assign.js","../node_modules/core-js/library/modules/_object-create.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_object-dps.js","../node_modules/core-js/library/modules/_object-gops.js","../node_modules/core-js/library/modules/_object-gpo.js","../node_modules/core-js/library/modules/_object-keys-internal.js","../node_modules/core-js/library/modules/_object-keys.js","../node_modules/core-js/library/modules/_object-pie.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_redefine.js","../node_modules/core-js/library/modules/_set-to-string-tag.js","../node_modules/core-js/library/modules/_shared-key.js","../node_modules/core-js/library/modules/_shared.js","../node_modules/core-js/library/modules/_string-at.js","../node_modules/core-js/library/modules/_to-index.js","../node_modules/core-js/library/modules/_to-integer.js","../node_modules/core-js/library/modules/_to-iobject.js","../node_modules/core-js/library/modules/_to-length.js","../node_modules/core-js/library/modules/_to-object.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_uid.js","../node_modules/core-js/library/modules/_wks.js","../node_modules/core-js/library/modules/core.get-iterator-method.js","../node_modules/core-js/library/modules/core.get-iterator.js","../node_modules/core-js/library/modules/es6.array.iterator.js","../node_modules/core-js/library/modules/es6.object.assign.js","../node_modules/core-js/library/modules/es6.string.iterator.js","../node_modules/core-js/library/modules/web.dom.iterable.js"],"names":[],"mappings":"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BAAc,QAA3I;AACI;AAAA;AAAA,8BAAM,WAAU,SAAhB;AAAA;AAAA,yBADJ;AAEI,sDAAM,WAAU,UAAhB,GAFJ;AAGI,sDAAM,WAAU,UAAhB,GAHJ;AAII,sDAAM,WAAU,UAAhB;AAJJ,qBADJ;AAOI;AAAA;AAAA,0BAAG,WAAU,cAAb,EAA4B,MAAK,GAAjC;AAAsC,6BAAK,KAAL,CAAW,OAAX,CAAmB;AAAzD;AAPJ,iBADJ;AAUI;AAAA;AAAA,sBAAK,IAAG,QAAR,EAAiB,WAAU,0BAA3B;AACI;AAAA;AAAA,0BAAI,WAAU,gBAAd;AACC;AADD;AADJ;AAVJ;AADI,SADJ;AAqBH;AAnD4B,CAAlB,C;;;;;ACHf;;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;;ACFA;AACA;;ACDA;AACA;AACA;AACA;;ACHA;;ACAA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;;ACAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;;ACFA;;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Header from 'public/module/common/header';\r\nimport Jumbotron from './module/jumbotron/index';\r\nimport Fezdesc from './module/fezdesc/index';\r\nimport Footer from 'public/module/common/footer';\r\n\r\n\r\nlet Page = React.createClass({\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n        <Header />\r\n        <Jumbotron />\r\n        <Fezdesc />\r\n        <Footer />\r\n        </div>\r\n\t\t);\r\n\t}\r\n});\r\n\r\nReactDOM.render(\r\n\t<Page />,\r\n\tdocument.getElementById('app')\r\n);","import Service from './service';\n\nexport default React.createClass({\n    getInitialState() {\n        return {\n            fezdesc: \"\"\n        };\n    },\n    componentDidMount() {\n\n        Service.renderData().then((data) => {\n            this.setState({\n                fezdesc: data\n            });\n        });\n    },\n    render() {\n        return (\n            <div className=\"container fezdesc\">\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h3>{this.state.fezdesc}</h3>\n                <div className=\"fez-big-logo\"></div>\n            </div>\n        </div>\n        <hr />\n    </div>\n        );\n\n    }\n});","import Q from 'q';\n\nimport ApiData from 'public/demo-data'\n\nexport default {\n    renderData() {\n        return Q.Promise((resolve, reject) => {\n            resolve(ApiData.index.fezdesc);\n        });\n    }\n}\n","import Service from './service';\n\nexport default React.createClass({\n    getInitialState() {\n        return {\n            jumbotronData: {\n                title: \"\",\n                content: \"\",\n                button: {\n                    name: ``,\n                    href: \"\"\n                }\n            }\n        };\n    },\n    componentDidMount() {\n\n        Service.renderData().then((data) => {\n            this.setState({\n                jumbotronData: Object.assign({}, data)\n            });\n        });\n    },\n    render() {\n        return (\n            <div className=\"jumbotron\">\n        <div className=\"container\">\n            <h1>{this.state.jumbotronData.title}</h1>\n            <p>{this.state.jumbotronData.content}</p>\n            <p>\n                <a className=\"btn btn-primary btn-lg\" href={this.state.jumbotronData.button.href} role=\"button\" dangerouslySetInnerHTML={{\n                __html: this.state.jumbotronData.button.name\n            }}></a>\n            </p>\n        </div>\n    </div>\n        );\n\n    }\n});","import Q from 'q';\n\nimport ApiData from 'public/demo-data'\n\nexport default {\n    renderData() {\n        return Q.Promise((resolve, reject) => {\n            resolve(ApiData.index.jumbotron);\n        });\n    }\n}\n","let frames = [{\n    title: \"Nodejs\",\n    desc: \"FEZ 构建在 NodeJS 基于 Chrome V8 引擎的 JavaScript 运行环境，其事件驱动非阻塞的特性，极其快速的编译前端各种资源\",\n    content: `<div id=\"home-intro\">\n\n        <p>Node.js® is a JavaScript runtime built on <a href=\"https://developers.google.com/v8/\">Chrome's V8 JavaScript engine</a>.\nNode.js uses an event-driven, non-blocking I/O model that makes it\nlightweight and efficient. Node.js' package ecosystem, <a href=\"https://www.npmjs.com/\">npm</a>, is the largest ecosystem of open\nsource libraries in the world.</p>\n\n\n\n        <h2 id=\"home-downloadhead\" data-dl-local=\"Download for\">Download for macOS (x64)</h2>\n\n        <div class=\"home-downloadblock\">\n\n          <a href=\"https://nodejs.org/dist/v6.10.0/node-v6.10.0.pkg\" class=\"home-downloadbutton\" title=\"Download v6.10.0 LTS\" data-version=\"v6.10.0\">\n            v6.10.0 LTS\n            <small>Recommended For Most Users</small>\n          </a>\n\n          <ul class=\"list-divider-pipe home-secondary-links\">\n            <li>\n              <a href=\"https://nodejs.org/en/download/\">Other Downloads</a>\n            </li>\n            <li>\n              <a href=\"https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V6.md#6.10.0\">Changelog</a>\n            </li>\n            <li>\n              <a href=\"https://nodejs.org/dist/latest-v6.x/docs/api/\">API Docs</a>\n            </li>\n          </ul>\n\n        </div>\n\n          <div class=\"home-downloadblock\">\n\n            <a href=\"https://nodejs.org/dist/v7.7.1/node-v7.7.1.pkg\" class=\"home-downloadbutton\" title=\"Download v7.7.1 Current\" data-version=\"v7.7.1\">\n              v7.7.1 Current\n              <small>Latest Features</small>\n            </a>\n\n            <ul class=\"list-divider-pipe home-secondary-links\">\n              <li>\n                <a href=\"https://nodejs.org/en/download/current/\">Other Downloads</a>\n              </li>\n              <li>\n                <a href=\"https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V7.md#7.7.1\">Changelog</a>\n              </li>\n              <li>\n                <a href=\"https://nodejs.org/dist/latest-v7.x/docs/api/\">API Docs</a>\n              </li>\n            </ul>\n\n          </div>\n        <p>\n          Or have a look at the <a href=\"https://github.com/nodejs/LTS#lts-schedule\">LTS schedule.</a>\n        </p>\n      </div>`,\n    viewMore: {\n        text: \"更多信息\",\n        href: \"https://nodejs.org/\"\n    }\n}, {\n    title: \"NPM\",\n    desc: \"FEZ 使用 NPM 接入全球最大的开源生态系统，具备无限的功能扩展能力，可整合国际前沿的开源框架，适应瞬息万变的技术更替\",\n    content: `<h1 class=\"title em-default type-neutral-11\">\n          Build amazing things\n        </h1>\n        <p class=\"h5 em-default type-neutral-11 pbxl\">\n          npm is the package manager for JavaScript. Find, share, and reuse\n          packages of code from hundreds of thousands of developers — and\n          assemble them in powerful new ways.\n        </p>\n        <a id=\"main-cta\" href=\"#pane-homepage-pricing\" class=\"btn btn-highlight-3 mrl\" data-event-name=\"homepage-hero-cta\">Get started</a>`,\n    viewMore: {\n        text: \"更多信息\",\n        href: \"https://www.npmjs.com/\"\n    }\n}, {\n    title: \"Gulp\",\n    desc: \"FEZ 整合Gulp的众多插件，编译、优化和组织前端复杂的模块及静态资源，喝着可乐儿、哼着小曲儿，自动化完成前端大量重复工作\",\n    content: `<h1 class=\"heading text-center\">Automate and enhance your workflow</h1><h2 class=\"paragraph\">\n          gulp is a toolkit for automating painful or time-consuming tasks in your development workflow, so you can stop messing around and build something.\n        </h2><div class=\"ctas\">\n          <a class=\"ctas-button\" href=\"https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md\">Get Started</a>\n        </div>`,\n    viewMore: {\n        text: \"更多信息\",\n        href: \"http://gulpjs.com/\"\n    }\n}, {\n    title: \"Browserify\",\n    desc: \"FEZ 使用 Browserify 模块化组织和管理项目的各个功能模块，极大提升项目的可维护性、功能复用性，并实现积木式的搭建网页\",\n    content: `<section id=\"top-home-section\" class=\"top-section color-a\">\n      <div id=\"top-home-image\"></div>\n\n       <h3 id=\"top-subtitle\" class=\"large-font\">Browserify lets you require(<span class=\"color-d\">'modules'</span>) in the browser by bundling up all of your dependencies.</h3>\n      <a href=\"https://github.com/substack/node-browserify#usage\">\n        <button class=\"top-button\" id=\"top-button2\">\n          Documentation\n        </button>\n      </a>\n    </section>`,\n    viewMore: {\n        text: \"更多信息\",\n        href: \"http://browserify.org/\"\n    }\n}, {\n    title: \"Bower\",\n    desc: \"FEZ 可配置使用 Bower 搜索、安装、更新和卸载如JavaScript、CSS之类的网络资源，通过自动化注入技术完美解决复杂的框架包管理问题\",\n    content: `<div class=\"main\">\n<p class=\"lead\">Web sites are made of lots of things — frameworks, libraries, assets, and utilities. Bower manages all these things for you.</p>\n<p>Keeping track of all these packages and making sure they are up to date (or set to the specific versions you need) is tricky. Bower to the rescue!</p>\n<p>Bower can manage components that contain HTML, CSS, JavaScript, fonts or even image files. Bower doesn’t concatenate or minify code or do anything else - it just installs the right versions of the packages you need and their dependencies.</p>\n<p>To <a href=\"#getting-started\">get started</a>, Bower works by fetching and installing <a href=\"/search\">packages</a> from all over, taking care of hunting, finding, downloading, and saving the stuff you’re looking for. Bower keeps track of these packages in a manifest file, <a href=\"/docs/creating-packages/#bowerjson\"><code class=\"highlighter-rouge\">bower.json</code></a>. How you use <a href=\"/search\">packages</a> is up to you. Bower provides hooks to facilitate using packages in your <a href=\"/docs/tools\">tools and workflows</a>.</p>\n<p>Bower is optimized for the front-end. If multiple packages depend on a package - jQuery for example - Bower will download jQuery just once. This is known as a flat dependency graph and it helps reduce page load.</p>\n<h2 id=\"install-bower\"><a href=\"#install-bower\" class=\"header-anchor\">§</a>Install Bower</h2>\n<p>Bower is a command line utility. Install it with npm.</p>\n<figure class=\"highlight\"><pre><code class=\"language-bash\" data-lang=\"bash\"><span class=\"gp\">$ </span>npm install -g bower</code></pre></figure>\n<p>Bower requires <a href=\"http://nodejs.org/\">node, npm</a> and <a href=\"http://git-scm.org\">git</a>.</p>\n<p>Latest release: <a href=\"\"><img src=\"https://img.shields.io/npm/v/bower.svg?maxAge=2592000\" alt=\"bower version\"></a></p>\n<p>For troubleshooting installation on different platforms, read the <a href=\"https://github.com/bower/bower/wiki/Troubleshooting\">troubleshooting</a> wiki page.</p>\n<h2 id=\"getting-started\"><a href=\"#getting-started\" class=\"header-anchor\">§</a>Getting started</h2>\n<h3 id=\"install-packages\"><a href=\"#install-packages\" class=\"header-anchor\">§</a>Install packages</h3>\n<p>Install packages with <a href=\"/docs/api#install\"><code class=\"highlighter-rouge\">bower install</code></a>. Bower installs packages to <code class=\"highlighter-rouge\">bower_components/</code>.</p>\n<figure class=\"highlight\"><pre><code class=\"language-bash\" data-lang=\"bash\"><span class=\"gp\">$ </span>bower install &lt;package&gt;</code></pre></figure>\n<p>A package can be a GitHub shorthand, a Git endpoint, a URL, and more. Read more about <a href=\"/docs/api/#install\"><code class=\"highlighter-rouge\">bower install</code></a>.</p>\n<figure class=\"highlight\"><pre><code class=\"language-bash\" data-lang=\"bash\"><span class=\"c\"># installs the project dependencies listed in bower.json</span>\n<span class=\"gp\">$ </span>bower install\n<span class=\"c\"># registered package</span>\n<span class=\"gp\">$ </span>bower install jquery\n<span class=\"c\"># GitHub shorthand</span>\n<span class=\"gp\">$ </span>bower install desandro/masonry\n<span class=\"c\"># Git endpoint</span>\n<span class=\"gp\">$ </span>bower install git://github.com/user/package.git\n<span class=\"c\"># URL</span>\n<span class=\"gp\">$ </span>bower install http://example.com/script.js</code></pre></figure>\n<h3 id=\"search-packages\"><a href=\"#search-packages\" class=\"header-anchor\">§</a>Search packages</h3>\n<p><a href=\"/search\">Search Bower packages</a> and find the registered package names for your favorite projects.</p>\n<h3 id=\"save-packages\"><a href=\"#save-packages\" class=\"header-anchor\">§</a>Save packages</h3>\n<p>Create a <code class=\"highlighter-rouge\">bower.json</code> file for your package with <a href=\"/docs/creating-packages/#bowerjson\"><code class=\"highlighter-rouge\">bower init</code></a>.</p>\n<p>Then save new dependencies to your <code class=\"highlighter-rouge\">bower.json</code> with <code class=\"highlighter-rouge\">bower install PACKAGE --save</code></p>\n<h3 id=\"use-packages\"><a href=\"#use-packages\" class=\"header-anchor\">§</a>Use packages</h3>\n<p>How you use packages is up to you. We recommend you use Bower together with <a href=\"/docs/tools/\">Grunt, RequireJS, Yeoman, and lots of other tools</a> or build your own workflow with <a href=\"/docs/api/\">the API</a>. You can also use the installed packages directly, like this, in the case of <code class=\"highlighter-rouge\">jquery</code>:</p>\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"bower_components/jquery/dist/jquery.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span></code></pre></figure>\n<h2 id=\"twitter-updates-from-bowerhttpstwittercombower\"><a href=\"#twitter-updates-from-bowerhttpstwittercombower\" class=\"header-anchor\">§</a>Twitter updates from <a href=\"https://twitter.com/bower\">@bower</a></h2>\n<p><a class=\"twitter-timeline\" href=\"https://twitter.com/bower\" data-widget-id=\"480377291369754625\">Tweets by @bower</a>\n</p>\n\n</div>`,\n    viewMore: {\n        text: \"更多信息\",\n        href: \"https://bower.io/\"\n    }\n}, {\n    title: \"BorwserSync\",\n    desc: \"FEZ 使用 Browsersync 让浏览器实时快速的响应前端各种文件的更改并自动刷新页面，亦可实时同步各个终端，提高至少30%的开发效率\",\n    content: `<h1 class=\"hook\">Time-saving synchronised browser testing.</h1><p class=\"ronseal\">It’s wicked-fast and totally free.</p><p class=\"video\"><a class=\"video__link\" href=\"#\"></a></p><p class=\"how-to\"></p><p class=\"how-to__command\">npm install -g browser-sync</p><p class=\"cta\"><a class=\"button button--primary\" href=\"#install\" title=\"Get Started\">Get Started</a></p><div class=\"player\"><p>'bonjour</p></div>`,\n    viewMore: {\n        text: \"更多信息\",\n        href: \"https://browsersync.io/\"\n    }\n}]\n\nlet index = {\n    fezdesc: \"FEZ 前端模块化工程开发框架\",\n    jumbotron: {\n        title: \"Hello, FEZ And React!\",\n        content: \"这是一个使用 FEZ 构建的前端模块化开发示例，演示了基于React单文件组件的开发结构。\",\n        button: {\n            name: `<i class=\"fa fa-github-alt\"></i> GitHub`,\n            href: \"https://github.com/furic-zhao/fez\"\n        }\n    }\n}\n\nlet list = {\n    jumbotron: {\n        title: \"FEZ And React Frame!\",\n        content: \"这是一个FEZ整合React的列表展示页，请点击下面列表的 Detail 按钮进入详情页浏览\",\n        button: {\n            name: \"查看更多信息\",\n            href: \"http://fez.hestudy.com\"\n        }\n    }\n}\n\nlet common = {\n    siteName: \"FEZ React DEMO\",\n\n    navData: [{\n        name: \"首页\",\n        href: \"index.html\"\n    }, {\n        name: \"FEZ基本架构\",\n        href: \"list.html\"\n    }],\n\n    footerText: \"© 2017 FEZ 前端模块化工程开发框架 Created by Furic.zhao\"\n}\n\nexport default {\n    \"index\": index,\n    \"list\": list,\n    \"frames\": frames,\n    \"common\": common\n}\n","import Q from 'q'\n\nimport ApiData from 'public/demo-data'\n\nexport default {\n    navList() {\n            return Q.Promise((resolve, reject) => {\n                resolve(ApiData.common.navData)\n            })\n        },\n        siteName() {\n            return Q.Promise((resolve, reject) => {\n                resolve(ApiData.common.siteName)\n            })\n        },\n        footerText() {\n            return Q.Promise((resolve, reject) => {\n                resolve(ApiData.common.footerText)\n            })\n        }\n}\n","import Service from './common'\n\nexport default React.createClass({\n    getInitialState() {\n        return {\n            footerText: \"\"\n        }\n    },\n    componentDidMount() {\n        Service.footerText().then((data) => {\n            this.setState({\n                footerText: data\n            })\n        })\n    },\n    render() {\n\n        return (<footer className=\"container\">\n        <span className=\"pull-left\">{this.state.footerText}</span>\n        <span className=\"pull-right\">\n        <i className=\"icon icon-weixin\"></i>\n        <i className=\"icon icon-weibo\"></i>\n    </span>\n    </footer>)\n\n    }\n})","import Service from './common'\nimport Q from 'q'\n\nexport default React.createClass({\n    getInitialState() {\n        return {\n            rtnData: {\n                siteName: \"\",\n                navList: []\n            }\n        }\n    },\n    componentDidMount() {\n        Q.all([\n            Service.siteName(),\n            Service.navList()\n        ]).then((data) => {\n            let rtnData = {\n                siteName: data[0],\n                navList: data[1]\n            }\n            this.setState({\n                rtnData: rtnData\n            })\n        })\n    },\n    render() {\n        let navList = []\n\n        for (let item of this.state.rtnData.navList) {\n            navList.push(<li key={item.name}><a href={item.href}>{item.name}</a></li>)\n        }\n\n        return (\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n        <div className=\"container\">\n            <div className=\"navbar-header\">\n                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                    <span className=\"icon-bar\"></span>\n                </button>\n                <a className=\"navbar-brand\" href=\"/\">{this.state.rtnData.siteName}</a>\n            </div>\n            <div id=\"navbar\" className=\"collapse navbar-collapse\">\n                <ul className=\"nav navbar-nav\">\n                {navList}\n                </ul>\n            </div>\n        </div>\n    </nav>\n        )\n\n    }\n})","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","module.exports = require('./_global').document && document.documentElement;","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","module.exports = true;","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};","exports.f = Object.getOwnPropertySymbols;","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","exports.f = {}.propertyIsEnumerable;","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","module.exports = require('./_hide');","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}